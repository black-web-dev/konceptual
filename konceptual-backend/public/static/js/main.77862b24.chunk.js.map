{"version":3,"sources":["themes/typography.js","themes/palette.js","themes/componentStyleOveride.js","themes/index.js","pages/WebGL.js","layouts/admin/Sider.jsx","services/api.js","store/slices/auth.slice.js","layouts/admin/Navbar.jsx","layouts/admin/index.jsx","components/admin/UsersTable.jsx","pages/admin/ManageUsers.jsx","pages/admin/ManageRooms.jsx","pages/admin/ManageNFTs.jsx","services/admin/auth.service.js","pages/admin/auth/index.jsx","layouts/web/index.jsx","utils/transformers.js","utils/index.js","services/auth.service.js","pages/web/auth/index.jsx","routes/index.js","store/index.js","App.jsx","reportWebVitals.js","index.js"],"names":["themeTypography","h1","color","fontWeight","h2","h3","h4","h5","h6","body1","body2","button","textTransform","subtitle1","fontSize","themePalette","background","default","Android12Switch","styled","Switch","theme","padding","borderRadius","content","position","top","transform","width","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","margin","componentStyleOveride","MuiPaper","defaultProps","elevation","styleOverrides","root","backgroundColor","border","MuiButtonBase","MuiButton","borderColor","outlined","MuiIconButton","MuiAppBar","borderBottom","borderWidth","borderLeft","minWidth","createTheme","typography","components","UnityContent","WebGL","Sider","props","Box","collapsed","sx","zIndex","Typography","variant","textAlign","my","List","menuItems","map","menuItem","index","ListItem","px","alignItems","component","Link","to","url","ListItemButton","selected","window","location","href","includes","pl","py","ListItemIcon","icon","ListItemText","text","axiosInstance","axios","create","baseURL","headers","setAuthToken","token","defaults","common","sendRequest","method","data","Promise","resolve","reject","then","response","catch","err","authSlice","createSlice","name","initialState","user","reducers","setCredentials","state","payload","destoryCredentials","actions","Navbar","navigate","useNavigate","useSelector","auth","dispatch","useDispatch","signOut","sessionStorage","clear","flexGrow","ml","AppBar","Toolbar","IconButton","size","onClick","toggleSider","ArrowRight","ArrowLeft","display","username","popupId","popupState","Button","bindTrigger","Menu","bindMenu","anchorOrigin","horizontal","vertical","MenuItem","NavLink","sider","MainLayout","useState","setCollapsed","title","p","children","createData","email","wallet_address","status","rows","BasicTable","useEffect","TableContainer","Paper","Stack","justifyContent","flexDirection","FormControl","Select","labelId","id","value","Table","TableHead","TableRow","TableCell","align","TableBody","scope","FormControlLabel","control","label","string","charAt","toUpperCase","slice","MainPage","Grid","container","item","xs","mt","owner","nft_count","ManageRooms","mr","row","image","amount","Container","maxWidth","spacing","nft","Card","CardMedia","CardContent","gutterBottom","CardActions","direction","src","loginAdmin","password","Auth","setUsername","setPassword","alert","setAlert","handleLogin","a","decoded","jwt_decode","jwtToken","m","mb","TextField","InputProps","startAdornment","InputAdornment","faCircleUser","onChange","e","target","required","type","faLock","startIcon","faWallet","BackgroundImage","backgroundSize","DarkBackground","WebLayout","pubkey","padCnt","anchorEl","setAnchorEl","open","Boolean","wallet","useWallet","handleLogout","removeItem","disconnect","role","event","currentTarget","startsWith","repeat","onClose","MenuListProps","transformOrigin","isValidEmail","String","toLowerCase","match","loginUser","registerUser","authModes","setEmail","authMode","setAuthMode","connected","publicKey","toString","console","log","toggleMode","faEnvelope","disabled","cursor","underline","MainRoutes","path","exact","element","store","configureStore","reducer","authReducer","wallets","getPhantomWallet","App","endpoint","autoConnect","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+lBA2CeA,EA3CS,WACtB,MAAO,CACLC,GAAI,CACFC,MAAO,OACPC,WAAY,QAEdC,GAAI,CACFF,MAAO,OACPC,WAAY,QAEdE,GAAI,CACFH,MAAO,OACPC,WAAY,QAEdG,GAAI,CACFJ,MAAO,OACPC,WAAY,QAEdI,GAAI,CACFL,MAAO,OACPC,WAAY,QAEdK,GAAI,CACFN,MAAO,OACPC,WAAY,QAEdM,MAAO,CACLP,MAAO,QAETQ,MAAO,CACLR,MAAO,IAETS,OAAQ,CACNC,cAAe,OACfT,WAAY,QAEdU,UAAW,CACTC,SAAU,SACVZ,MAAO,eC9BEa,EARM,WACnB,MAAO,CACLC,WAAY,CACVC,QAAS,U,uBC0LFC,EAAkBC,YAAOC,IAAPD,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC5DC,QAAS,EACT,qBAAsB,CACpBC,aAAc,GACd,oBAAqB,CACnBC,QAAS,KACTC,SAAU,WACVC,IAAK,MACLC,UAAW,mBACXC,MAAO,GACPC,OAAQ,IAEV,WAAY,CACVC,gBAAgB,gIAAD,OAAiIC,mBAC9IV,EAAMW,QAAQC,gBAAgBZ,EAAMW,QAAQE,QAAQC,OADvC,4EAGfC,KAAM,IAER,UAAW,CACTN,gBAAgB,gIAAD,OAAiIC,mBAC9IV,EAAMW,QAAQC,gBAAgBZ,EAAMW,QAAQE,QAAQC,OADvC,wCAGfE,MAAO,KAGX,qBAAsB,CACpBC,UAAW,OACXV,MAAO,GACPC,OAAQ,GACRU,OAAQ,OAIGC,EA3Ne,WAAO,IAAD,EAClC,OAAO,EAAP,CACEC,SAAU,CACRC,aAAc,CACZC,UAAW,GAEbC,eAAgB,CACdC,KAAM,CACJC,gBAAiB,UACjBvB,aAAc,OACdwB,OAAQ,OACR7C,MAAO,OACPoB,QAAS,UAMf0B,cAAe,CACbJ,eAAgB,CACdC,KAAM,CACJ,UAAW,CACTC,gBAAiB,sBAK3BG,UAAW,CACPL,eAAgB,CACdC,KAAM,CACJ3C,MAAO,OACP,iBAAkB,CAChBA,MAAO,YACPgD,YAAa,aAEf,yBAA0B,CACxBJ,gBAAiB,SAGrBK,SAAU,CACRD,YAAa,OACb,UAAW,CACTA,YAAa,gBAKrBE,cAAe,CACbR,eAAgB,CACdC,KAAM,CACJ3C,MAAO,OACP,iBAAkB,CAChBA,MAAO,YACPgD,YAAa,gBAKrBG,UAAW,CACTT,eAAgB,CACdC,KAAM,CACJC,gBAAiB,OACjB5C,MAAO,OACPoD,aAAc,sBACd/B,aAAc,UA/DtB,8BAmEiB,CACbqB,eAAgB,CACdC,KAAM,CACJ3C,MAAO,OACPqD,YAAa,MACbL,YAAa,WAxErB,kCA4EqB,CACjBN,eAAgB,CACdC,KAAM,CACJC,gBAAiB,YACjBU,WAAY,sBACZC,SAAU,OACV,UAAW,CACTD,WAAY,qBAEd,iBAAkB,CAChBA,WAAY,yBAtFtB,wBA4FW,CACPZ,eAAgB,CACdC,KAAM,CACJ,mBAAoB,CAClBvB,QAAS,iBACTwB,gBAAiB,YAjG3B,iCAwGoB,CAChBF,eAAgB,CACdC,KAAM,CACJ3C,MAAO,OACPgD,YAAa,OACb,QAAS,CACPhD,MAAO,QAET,aAAc,CACZgD,YAAa,QAEf,mBAAoB,CAClBA,YAAa,uBApHvB,0BA2Ha,CACTN,eAAgB,CACdC,KAAM,CACJC,gBAAiB,OACjB5C,MAAO,OACPoD,aAAc,sBACd/B,aAAc,UAjItB,2BAqIc,CACVqB,eAAgB,CACdC,KAAM,CACJ3C,MAAO,WAxIf,yBA8IY,CACR0C,eAAgB,CACdC,KAAM,MAhJZ,6BAqJgB,CACZD,eAAgB,CACdC,KAAM,CACJC,gBAAiB,YACjB,uBAAwB,CACtB5C,MAAO,YACPU,cAAe,kBA3JzB,6BAgKgB,CACZgC,eAAgB,CACdC,KAAM,CACJ3C,MAAO,OACPgD,YAAa,gBApKrB,6BAwKgB,CACZN,eAAgB,CACdC,KAAM,CACJ3C,MAAO,WA3Kf,yBA+KY,CACR0C,eAAgB,CACdC,KAAM,CACJ3C,MAAO,WAlLf,GCQamB,EANDqC,YAAY,CACxB1B,QAASjB,IACT4C,WAAY3D,IACZ4D,WAAYpB,M,qECHO,IAAIqB,eAAa,yBAA0B,8BA0BjDC,I,6HCUAC,EAtCD,SAACC,GACb,OACE,eAACC,EAAA,EAAD,CACErC,MAAOoC,EAAME,UAAW,OAAS,QAASrC,OAAO,OACjDsC,GAAI,CAAE1C,SAAU,QAAS2C,OAAQ,UAAW1C,IAAK,EAAGU,KAAM,EAAGU,gBAAiB,QAFhF,UAIE,cAACuB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,SAASC,GAAI,EAAhD,sBACA,cAACC,EAAA,EAAD,UACIT,EAAME,UACNF,EAAMU,UAAUC,KAAI,SAACC,EAAUC,GAC7B,OACE,cAACC,EAAA,EAAD,CAAUX,GAAI,CAAEY,GAAI,GAAKC,WAAW,SAAuBC,UAAYC,IAAOC,GAAKP,EAASQ,IAA5F,SACE,cAACC,EAAA,EAAD,CAAgBC,SAAWC,OAAOC,SAASC,KAAKC,SAASd,EAASQ,KAAOjB,GAAI,CAACwB,GAAI,OAAQC,GAAI,QAA9F,SACE,cAACC,EAAA,EAAD,UACIjB,EAASkB,UAHkCjB,MASvDb,EAAMU,UAAUC,KAAI,SAACC,EAAUC,GAC7B,OACE,cAACC,EAAA,EAAD,CAAUX,GAAI,CAAEY,GAAI,GAAmBE,UAAYC,IAAOC,GAAKP,EAASQ,IAAxE,SACE,eAACC,EAAA,EAAD,CAAgBC,SAAWC,OAAOC,SAASC,KAAKC,SAASd,EAASQ,KAAlE,UACE,cAACS,EAAA,EAAD,UACIjB,EAASkB,OAEb,cAACC,EAAA,EAAD,CAAc7D,QAAU0C,EAASoB,WALNnB,Y,4MCxBzCoB,G,QAAgBC,EAAMC,OAAO,CAC7BC,QAAS,oCACTC,QAAS,CACL,8BAA+B,OAI1BC,GAAe,SAAAC,GACxBN,GAAcO,SAASH,QAAQI,OAA/B,cAAyDF,GAGhDG,GAAc,SAAC,GAA2B,IAAzBtB,EAAwB,EAAxBA,IAAKuB,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACvC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBd,GAAc,CACVU,SACAvB,MACAwB,KAAMA,GAAQ,KAEjBI,MAAK,SAAAC,GACFH,EAAQG,EAASL,SAEpBM,OAAM,SAAAC,GACHJ,EAAOI,EAAIF,iBCfVG,GAAYC,aAAY,CACjCC,KAAM,OACNC,aAPiB,CACjBC,KAAM,KACNjB,MAAO,MAMPkB,SAAU,CACNC,eAAgB,SAACC,EAAD,GAA0C,IAAD,IAA/BC,QAAWJ,EAAoB,EAApBA,KAAMjB,EAAc,EAAdA,MACvCD,GAAaC,GACboB,EAAMH,KAAOA,EACbG,EAAMpB,MAAQA,GAElBsB,mBAAoB,SAACF,GACjBrB,GAAa,IACbqB,EAAMH,KAAO,KACbG,EAAMpB,MAAQ,SAKnB,GAA+Ca,GAAUU,QAAjDJ,GAAR,GAAQA,eAAgBG,GAAxB,GAAwBA,mBAChBT,MAAf,QCmEeW,GAlFA,SAAC/D,GACd,IAAMgE,EAAWC,cACXT,EAAOU,aAAY,SAAAP,GAAK,OAAIA,EAAMQ,KAAKX,QACvCY,EAAWC,cAMXC,EAAU,WACdC,eAAeC,QACfJ,EAASP,MACTG,EAAS,gBAGX,OACE,cAAC/D,EAAA,EAAD,CAAKE,GAAI,CAAEsE,SAAU,EAAGC,GAAI1E,EAAME,UAAY,QAAU,SAAxD,SACE,cAACyE,EAAA,EAAD,CAAQlH,SAAS,SAAS0C,GAAI,CAAEwB,GAAG,GAAnC,SACE,eAACiD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,QAdP,WACxB/E,EAAMgF,aAAahF,EAAME,YAanB,SACGF,EAAME,UAAY,cAAC+E,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,MAEtC,cAAC7E,EAAA,EAAD,CACEC,QAAQ,KACRW,UAAU,MAFZ,uBAMA,cAAChB,EAAA,EAAD,CAAKE,GAAI,CAAEsE,SAAU,KACrB,eAACxE,EAAA,EAAD,CAAKE,GAAI,CAAEgF,QAAS,QAApB,UACE,cAACN,EAAA,EAAD,CAAYC,KAAK,QAAjB,SACE,cAAC,KAAD,MAEF,cAACD,EAAA,EAAD,CAAYC,KAAK,QAAjB,SACE,cAAC,KAAD,MAEF,cAACD,EAAA,EAAD,CAAYC,KAAK,QAAjB,SACE,cAAC,KAAD,MAGAtB,GAAQA,EAAK4B,SAET,mCACE,cAAC,KAAD,CAAY9E,QAAQ,UAAU+E,QAAQ,kBAAtC,SACG,SAACC,GAAD,OACC,qCACE,cAACC,EAAA,EAAD,yBAAQjF,QAAQ,YAAekF,uBAAYF,IAA3C,aACI9B,EAAK4B,YAET,cAACK,EAAA,EAAD,2BAAUC,oBAASJ,IAAnB,IAAgCK,aAAc,CAAEC,WAAY,QAASC,SAAU,UAA/E,SACE,eAACC,EAAA,EAAD,CAAUf,QAAST,EAAnB,UAA4B,cAAC,IAAD,IAA5B,yBAOV,cAACiB,EAAA,EAAD,CAAQjF,QAAQ,OACdH,GAAI,CAAEuE,GAAI,EAAG9G,MAAO,QACpB1B,MAAM,UACN+E,UAAW8E,IACX5E,GAAG,cACH2D,KAAK,QALP,gCC5DZkB,GAAQ,CACZ,CAAEhE,KAAM,cAAeZ,IAAK,eAAgBU,KAAM,cAAC,IAAD,KAClD,CAAEE,KAAM,cAAeZ,IAAK,eAAgBU,KAAM,cAAC,IAAD,KAClD,CAAEE,KAAM,cAAeZ,IAAK,qBAAsBU,KAAM,cAAC,IAAD,MAgB3CmE,GAdI,SAACjG,GAClB,MAAkCkG,oBAAS,GAA3C,mBAAOhG,EAAP,KAAkBiG,EAAlB,KAEA,OACE,eAAClG,EAAA,EAAD,WACE,cAAC,EAAD,CAAOS,UAAWsF,GAAO9F,UAAWA,IACpC,cAAC,GAAD,CAAQkG,MAAOpG,EAAMoG,MAAOpB,YAAamB,EAAcjG,UAAWA,IAClE,cAACD,EAAA,EAAD,CAAKyE,GAAKxE,EAAY,OAAS,QAASmG,EAAG,EAA3C,SACIrG,EAAMsG,e,gICThB,SAASC,GAAWnB,EAAUoB,EAAOC,EAAgBC,GACnD,MAAO,CAAEtB,WAAUoB,QAAOC,iBAAgBC,UAG5C,IAAMC,GAAO,CACTJ,GAAW,cAAe,wBAAyB,6CAA8C,WACjGA,GAAW,gBAAiB,0BAA2B,6CAA8C,WACrGA,GAAW,eAAgB,yBAA0B,6CAA8C,WACnGA,GAAW,gBAAiB,0BAA2B,6CAA8C,WACrGA,GAAW,cAAe,wBAAyB,6CAA8C,YAGtF,SAASK,KACpB,MAA0BV,mBAAS,IAAnC,6BAEAW,qBAAU,cAKP,IAqBH,OACI,eAACC,GAAA,EAAD,CAAgB7F,UAAW8F,KAAO5G,GAAI,CAACkG,EAAE,GAAzC,UACI,eAACW,GAAA,EAAD,CAAOC,eAAe,gBAAgBC,cAAc,MAApD,UACI,cAAC7G,EAAA,EAAD,CAAYC,QAAQ,KAAK+F,EAAG,EAA5B,mBACA,cAACc,GAAA,EAAD,CAAa7G,QAAQ,WAArB,SACI,eAAC8G,GAAA,EAAD,CACIC,QAAQ,2BACRC,GAAG,qBACHnH,GAAI,CAAEvC,MAAO,SAHjB,UAQI,cAACkI,EAAA,EAAD,CAAUyB,MAAO,GAAjB,iBACA,cAACzB,EAAA,EAAD,CAAUyB,MAAO,GAAjB,oBACA,cAACzB,EAAA,EAAD,CAAUyB,MAAO,GAAjB,4BAIZ,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,iBACA,cAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,sBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,mBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,4BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,yBAGR,cAACC,GAAA,EAAD,UACKlB,GAAKhG,KAAI,SAAC6C,EAAM3C,GAAP,OACN,eAAC6G,GAAA,EAAD,CAEIvH,GAAI,CAAE,mCAAoC,CAAEpB,OAAQ,IAFxD,UAII,cAAC4I,GAAA,EAAD,CAAW1G,UAAU,KAAK6G,MAAM,MAAhC,SACKjH,EAAQ,IAEb,cAAC8G,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BpE,EAAK4B,WAChC,cAACuC,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BpE,EAAKgD,QAChC,cAACmB,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BpE,EAAKiD,iBAChC,cAACkB,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACI,cAACG,GAAA,EAAD,CACIC,QAAS,cAAC9K,EAAD,IACT+K,OAhDFC,EAgDgC1E,EAAKkD,OA/CxDwB,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,UAmC5BxH,GApCC,IAAAqH,aC9ClC,IAYeI,GAZE,SAACtI,GAChB,OACE,mCACI,cAACuI,GAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,GAAD,W,+DCIhB,SAASpC,GAAWjD,EAAMsF,EAAOC,GAC/B,MAAO,CAAEvF,OAAMsF,QAAOC,aAGxB,IAAMlC,GAAO,CACXJ,GAAW,iBAAkB,6CAA8C,IAC3EA,GAAW,qBAAsB,6CAA8C,IAC/EA,GAAW,SAAU,6CAA8C,IACnEA,GAAW,UAAW,6CAA8C,IACpEA,GAAW,cAAe,6CAA8C,KAG3D,SAASuC,KACtB,OACE,eAAChC,GAAA,EAAD,CAAgB7F,UAAW8F,KAAO5G,GAAI,CAACkG,EAAE,GAAzC,UACE,eAACW,GAAA,EAAD,CAAOC,eAAe,gBAAgBjG,WAAW,SAASkG,cAAc,MAAxE,UACE,cAAC7G,EAAA,EAAD,CAAYC,QAAQ,KAAK+F,EAAG,EAA5B,mBACA,eAACd,EAAA,EAAD,CAAQjF,QAAQ,WACdH,GAAI,CAAE4I,GAAI,EAAGlL,OAAQ,IACrB3B,MAAM,UACN4I,KAAK,QAHP,UAIC,cAAC,KAAD,IAJD,kBAMF,eAAC0C,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,uBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,wBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,wBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,gBAGrB,cAACC,GAAA,EAAD,UACGlB,GAAKhG,KAAI,SAACqI,EAAKnI,GAAN,OACR,eAAC6G,GAAA,EAAD,CAEEvH,GAAI,CAAE,mCAAoC,CAAEpB,OAAQ,IAFtD,UAIE,cAAC4I,GAAA,EAAD,CAAW1G,UAAU,KAAK6G,MAAM,MAAhC,SACGjH,EAAQ,IAEX,cAAC8G,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BoB,EAAI1F,OAC/B,cAACqE,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BoB,EAAIJ,QAC/B,cAACjB,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BoB,EAAIH,YAC/B,eAAClB,GAAA,EAAD,CAAWC,MAAM,SAAjB,UACE,cAACrC,EAAA,EAAD,CAAQT,KAAK,SAAb,SAAsB,cAAC,KAAD,MACtB,cAACS,EAAA,EAAD,CAAQT,KAAK,SAAb,SAAsB,cAAC,KAAD,WAXnBjE,c,sDC7CnB,SAAS0F,GAAW0C,EAAO3F,EAAM4F,GAC/B,MAAO,CAAED,QAAO3F,OAAM4F,UAGxB,IAAMvC,GAAO,CACXJ,GAAW,+CAAgD,yBAA0B,SACrFA,GAAW,4DAA6D,0BAA2B,UACnGA,GAAW,iDAAkD,cAAe,WAG/D,SAASuC,KACtB,OACE,eAACK,GAAA,EAAD,CAAWC,UAAW,EAAtB,UACE,eAACpC,GAAA,EAAD,CAAOC,eAAe,gBAAgBjG,WAAW,SAASkG,cAAc,MAAxE,UACE,cAAC7G,EAAA,EAAD,CAAYC,QAAQ,KAAK+F,EAAG,EAA5B,yBACA,eAACd,EAAA,EAAD,CAAQjF,QAAQ,WACdH,GAAI,CAAE4I,GAAI,EAAGlL,OAAQ,IACrB3B,MAAM,UACN4I,KAAK,QAHP,UAIC,cAAC,KAAD,IAJD,wBAMF,eAACyD,GAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,EAAzB,UAEI1C,GAAKhG,KAAI,SAAC2I,EAAKzI,GAAN,OACP,cAAC0H,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACa,GAAA,EAAD,CAAMpJ,GAAI,CAAEiJ,SAAU,OAAQvL,OAAQ,QAAtC,UACE,cAAC2L,GAAA,EAAD,CAAWvI,UAAU,MAAMgI,MAAQK,EAAIL,MAAQpL,OAAO,QACtD,cAAC4L,GAAA,EAAD,UACE,cAACpJ,EAAA,EAAD,CAAYqJ,cAAY,EAACpJ,QAAQ,KAAKW,UAAU,MAAM2G,MAAM,SAA5D,SAAuE0B,EAAIhG,SAE7E,cAACqG,GAAA,EAAD,UACE,cAACpB,GAAA,EAAD,CAAMC,WAAS,EAACoB,UAAU,MAAM3C,eAAe,SAASjG,WAAW,SAAnE,SACE,eAACuE,EAAA,EAAD,CAAQjF,QAAQ,WAAWpE,MAAM,UAAjC,UACE,qBAAK2N,IAAI,8BAA8BjM,MAAM,KAAKC,OAAO,OAD3D,mBACsFyL,EAAIJ,kBAT1ErI,MAkB1B8F,GAAKhG,KAAI,SAAC2I,EAAKzI,GAAN,OACP,cAAC0H,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACa,GAAA,EAAD,CAAMpJ,GAAI,CAAEiJ,SAAU,OAAQvL,OAAQ,QAAtC,UACE,cAAC2L,GAAA,EAAD,CAAWvI,UAAU,MAAMgI,MAAQK,EAAIL,MAAQpL,OAAO,QACtD,cAAC4L,GAAA,EAAD,UACE,cAACpJ,EAAA,EAAD,CAAYqJ,cAAY,EAACpJ,QAAQ,KAAKW,UAAU,MAAM2G,MAAM,SAA5D,SAAuE0B,EAAIhG,SAE7E,cAACqG,GAAA,EAAD,UACE,cAACpB,GAAA,EAAD,CAAMC,WAAS,EAACoB,UAAU,MAAM3C,eAAe,SAASjG,WAAW,SAAnE,SACE,eAACuE,EAAA,EAAD,CAAQjF,QAAQ,WAAWpE,MAAM,UAAjC,UACE,qBAAK2N,IAAI,8BAA8BjM,MAAM,KAAKC,OAAO,OAD3D,mBACsFyL,EAAIJ,kBAT1E,GAAKrI,EAAQ,OAkBvC8F,GAAKhG,KAAI,SAAC2I,EAAKzI,GAAN,OACP,cAAC0H,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACa,GAAA,EAAD,CAAMpJ,GAAI,CAAEiJ,SAAU,OAAQvL,OAAQ,QAAtC,UACE,cAAC2L,GAAA,EAAD,CAAWvI,UAAU,MAAMgI,MAAQK,EAAIL,MAAQpL,OAAO,QACtD,cAAC4L,GAAA,EAAD,UACE,cAACpJ,EAAA,EAAD,CAAYqJ,cAAY,EAACpJ,QAAQ,KAAKW,UAAU,MAAM2G,MAAM,SAA5D,SAAuE0B,EAAIhG,SAE7E,cAACqG,GAAA,EAAD,UACE,cAACpB,GAAA,EAAD,CAAMC,WAAS,EAACoB,UAAU,MAAM3C,eAAe,SAASjG,WAAW,SAAnE,SACE,eAACuE,EAAA,EAAD,CAAQjF,QAAQ,WAAWpE,MAAM,UAAjC,UACE,qBAAK2N,IAAI,8BAA8BjM,MAAM,KAAKC,OAAO,OAD3D,mBACsFyL,EAAIJ,kBAT1E,GAAKrI,EAAQ,a,2CChEpCiJ,GAAa,SAAC,GAA4B,IAA1B1E,EAAyB,EAAzBA,SAAU2E,EAAe,EAAfA,SACnC,OAAOrH,GAAY,CACftB,IAAK,oBACLuB,OAAQ,OACRC,KAAM,CACFwC,WAAU2E,eCuFPC,GAjFF,WACX,MAAgC9D,mBAAS,IAAzC,mBAAOd,EAAP,KAAiB6E,EAAjB,KACA,EAAgC/D,mBAAS,IAAzC,mBAAO6D,EAAP,KAAiBG,EAAjB,KACA,EAA0BhE,mBAAS,IAAnC,mBAAOiE,EAAP,KAAcC,EAAd,KACMhG,EAAWC,cACXL,EAAWC,cAEXoG,EAAW,uCAAG,8BAAAC,EAAA,+EAEKR,GAAW,CAC9B1E,WAAU2E,aAHI,OAEZ9G,EAFY,OAMZsH,EAAUC,YAAWvH,EAASV,OAClCgC,eAAekG,SAAWxH,EAASV,MACnC6B,EAASV,GAAe,CAAEF,KAAM+G,EAAShI,MAAOU,EAASV,SACzDyB,EAAS,gBATO,kDAWE,KAAd,KAAI0C,OACN0D,EAAS,gCACY,KAAd,KAAI1D,OACX0D,EAAS,iBACY,KAAd,KAAI1D,OACX0D,EAAS,uBACY,KAAd,KAAI1D,OACX0D,EAAS,mBACNA,EAAS,qBAnBE,0DAAH,qDAuBjB,OACE,eAACjB,GAAA,EAAD,CAAWC,SAAS,KAAKjJ,GAAI,CAACuK,EAAG,OAAQ7M,OAAQ,eAAjD,UACE,cAACwC,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,WAAW,OAAOgE,GAAI,CAAEyB,GAAI,QAArD,wBACA,cAACvB,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,WAAW,OAApC,qCACA,cAACkE,EAAA,EAAD,CAAYF,GAAI,CAAEwI,GAAI,EAAGgC,GAAI,GAA7B,yDACE,qCACI,cAACC,GAAA,EAAD,CACItD,GAAG,4BACHW,MAAM,oBACN9H,GAAI,CAACK,GAAG,EAAG5C,MAAO,QAClBiN,WAAY,CACRC,eACI,cAACC,GAAA,EAAD,CAAgBtN,SAAS,QAAzB,SACI,cAAC,KAAD,CAAiBqE,KAAMkJ,KAAc9O,MAAM,aAIvDqL,MAAOnC,EACP6F,SAAU,SAAAC,GAAC,OAAIjB,EAAYiB,EAAEC,OAAO5D,QACpC6D,UAAQ,IAEZ,cAACR,GAAA,EAAD,CACItD,GAAG,4BACHW,MAAM,WACN9H,GAAI,CAACK,GAAG,EAAG5C,MAAO,QAClByN,KAAK,WACLR,WAAY,CACRC,eACI,cAACC,GAAA,EAAD,CAAgBtN,SAAS,QAAzB,SACI,cAAC,KAAD,CAAiBqE,KAAOwJ,KAASpP,MAAM,aAInDqL,MAAOwC,EACPkB,SAAU,SAAAC,GAAC,OAAIhB,EAAYgB,EAAEC,OAAO5D,QACpC6D,UAAQ,OAIhBjB,GAAS,cAAClK,EAAA,EAAD,CAAKM,UAAU,SAASqB,GAAI,EAAG1F,MAAM,MAArC,SAA6CiO,IAExD,cAAC5E,EAAA,EAAD,CAAQjF,QAAQ,WACdH,GAAI,CAAEK,GAAI,EAAG5C,MAAO,OAAQyI,EAAG,GAC/BnK,MAAM,UACNqP,UAAY,cAAC,KAAD,CAAiBzJ,KAAM0J,OACnCzG,QAAUsF,EAJZ,yB,oBCzEAoB,GAAkBtO,aAAO8C,IAAP9C,CAAY,CAClCM,SAAU,WACVW,KAAM,EACNV,IAAK,EACLE,MAAO,OACPC,OAAQ,OACRb,WAAY,iEACZ0O,eAAgB,UAGZC,GAAiBxO,aAAO8C,IAAP9C,CAAY,CACjCM,SAAU,WACVW,KAAM,EACNV,IAAK,EACLE,MAAO,OACPC,OAAQ,OACRiB,gBAAiB,wBA0EJ8M,GAvEG,SAAC5L,GACjB,IC/BiC6L,EAAQC,ED+BzC,EAAkC5F,oBAAS,GAA3C,mBACM1C,GADN,UACaU,aAAY,SAAAP,GAAK,OAAIA,EAAMQ,KAAKX,SAC7C,EAAgC0C,mBAAS,MAAzC,mBAAO6F,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GACf/H,EAAWC,cACXG,EAAWC,cACX8H,EAASC,sBAYTC,EAAe,WACnB9H,eAAe+H,WAAW,YAC1BH,EAAOI,aACPnI,EAASP,MACTmI,EAAY,OAMd,OAHIxI,GAAsB,QAAbA,EAAKgJ,MAAmBhJ,EAAKiD,gBACxC4F,IAGA,qCACE,eAAC,eAAD,WACE,cAACZ,GAAD,IACA,cAACE,GAAD,IACA,cAACxC,GAAA,EAAD,CAAWC,UAAW,EAAQjJ,GAAI,CAAE1C,SAAU,WAAYmE,GAAI,GAA9D,SACE,eAAC3B,EAAA,EAAD,CAAKE,GAAI,CAAEgF,QAAS,OAAQ8B,eAAgB,YAA5C,UACE,cAAC1B,EAAA,EAAD,CAAQjF,QAAQ,YAAYpE,MAAM,UAAU4I,KAAK,QAAQC,QA3B/C,SAAC0H,GACfjJ,EACFwI,EAAYS,EAAMC,eACf1I,EAAS,UAwBN,SAAiFR,GClE1DqI,EDkEoFrI,EAAKiD,eClEjFqF,EDkEiG,ECjEjID,EAAOxD,MAAM,EAAGyD,GAAUD,EAAOc,WAAW,MAAQ,EAAI,IAAM,IAAIC,OAAO,GAAKf,EAAOxD,OAAOyD,IDiE0C,YACrI,cAACrG,EAAA,EAAD,CACE6B,GAAG,aACHyE,SAAUA,EACVE,KAAMA,EACNY,QA1BQ,WAClBb,EAAY,OA0BFc,cAAe,CACb,kBAAmB,gBAErBnH,aAAc,CACZE,SAAU,SACVD,WAAY,SAEdmH,gBAAiB,CACflH,SAAU,MACVD,WAAY,SAdhB,SAiBE,cAACE,EAAA,EAAD,CAAUf,QAASsH,EAAnB,+BAKR,cAAC,cAAD,UACE,cAACpM,EAAA,EAAD,UACE,cAACA,EAAA,EAAD,CAAKoG,EAAG,EAAR,SACIrG,EAAMsG,mBE5FP0G,I,OAAe,SAAAxG,GACxB,OAAOyG,OAAOzG,GACL0G,cACAC,MACG,2JCFHC,GAAY,SAAC,GAAwB,IAAtB3G,EAAqB,EAArBA,eACxB,OAAO/D,GAAY,CACftB,IAAK,cACLuB,OAAQ,OACRC,KAAM,CACF6D,qBAKC4G,GAAe,SAAC,GAAyC,IAAvCjI,EAAsC,EAAtCA,SAAUoB,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAC5C,OAAO/D,GAAY,CACftB,IAAK,iBACLuB,OAAQ,OACRC,KAAM,CACFwC,WAAUoB,QAAOC,qBCEvB6G,GACK,kBADLA,GAEQ,qBA4HCtD,GAzHF,WACT,MAAgC9D,mBAAS,IAAzC,mBAAOd,EAAP,KAAiB6E,EAAjB,KACA,EAA0B/D,mBAAS,IAAnC,mBAAOM,EAAP,KAAc+G,EAAd,KACA,EAA0BrH,mBAAS,IAAnC,mBAAOiE,EAAP,KAAcC,EAAd,KACA,EAAgClE,mBAASoH,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACMrJ,EAAWC,cACXL,EAAWC,cACXkI,EAASC,sBAEfvF,qBAAU,WACFsF,EAAOuB,WACPvB,EAAOI,eACZ,IAEH1F,qBAAU,WACN,sBAAC,gCAAAyD,EAAA,mEAEW6B,EAAOuB,UAFlB,oBAGyBjH,EAAiB0F,EAAOwB,UAAUC,WAC5CJ,GAAYF,GAJ3B,gCAKgCF,GAAU,CAAE3G,mBAL5C,OAKexD,EALf,iCAMsBuK,GAAYF,GANlC,kCAOgCD,GAAa,CAC1BjI,WAAUoB,QAAOC,mBARpC,QAOexD,EAPf,eAYesH,EAAUC,YAAWvH,EAASV,OAClCgC,eAAekG,SAAWxH,EAASV,MACnC6B,EAASV,GAAe,CAAEF,KAAM+G,EAAShI,MAAOU,EAASV,SACzDyB,EAAS,KAfpB,0DAkBO6J,QAAQC,IAAR,MACkB,KAAd,KAAIpH,OACJ0D,EAAS,uBACU,KAAd,KAAI1D,OACT0D,EAAS,sBACU,KAAd,KAAI1D,OACT0D,EAAS,wBACU,KAAd,KAAI1D,OACT0D,EAAS,iBACRA,EAAS,qBA3BrB,yDAAD,KA8BD,CAAC+B,EAAOuB,YAEX,IAAMK,EAAa,WAEXN,EADAD,GAAYF,GACAA,GACCA,IAEjBnB,EAAOI,aACPnC,EAAS,KAGb,OACI,eAACjB,GAAA,EAAD,CAAWC,SAAS,KAAKjJ,GAAI,CAACuK,EAAG,OAAQ7M,OAAQ,eAAjD,UACI,cAACwC,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,WAAW,OAAOgE,GAAI,CAAEyB,GAAI,QAArD,wBACA,eAACvB,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,WAAW,OAApC,UAA6CqR,GAAYF,GAAkB,QAAU,WAArF,iBACA,cAACjN,EAAA,EAAD,CAAYF,GAAI,CAAEwI,GAAI,EAAGgC,GAAI,GAA7B,yDAEI6C,GAAYF,IACR,qCACA,cAAC1C,GAAA,EAAD,CACItD,GAAG,4BACHW,MAAM,WACN9H,GAAI,CAACK,GAAG,EAAG5C,MAAO,QAClBiN,WAAY,CACZC,eACI,cAACC,GAAA,EAAD,CAAgBtN,SAAS,QAAzB,SACA,cAAC,KAAD,CAAiBqE,KAAMkJ,KAAc9O,MAAM,aAI/CqL,MAAOnC,EACP6F,SAAU,SAAAC,GAAC,OAAIjB,EAAYiB,EAAEC,OAAO5D,QACpC6D,UAAQ,IAEZ,cAACR,GAAA,EAAD,CACItD,GAAG,4BACHW,MAAM,QACN9H,GAAI,CAACK,GAAG,EAAG5C,MAAO,QAClBiN,WAAY,CACZC,eACI,cAACC,GAAA,EAAD,CAAgBtN,SAAS,QAAzB,SACA,cAAC,KAAD,CAAiBqE,KAAOkM,KAAa9R,MAAM,aAI/CqL,MAAOf,EACPyE,SAAU,SAAAC,GAAC,OAAIqC,EAASrC,EAAEC,OAAO5D,QACjC6D,UAAQ,OAKhBjB,GAASqD,GAAYF,IAAyB,cAACrN,EAAA,EAAD,CAAKM,UAAU,SAASqB,GAAI,EAAG1F,MAAM,MAArC,SAA6CiO,IAE/F,cAAClK,EAAA,EAAD,CAAKE,GAAI,CAAEgF,QAAS,OAAQ8B,eAAgB,UAA5C,SACI,cAAC,oBAAD,CAAmBsE,UAAY,cAAC,KAAD,CAAiBzJ,KAAM0J,OAClDyC,WAAY7I,GAAY4H,GAAaxG,KAAWgH,GAAYF,OAGhEnD,GAASqD,GAAYF,IAAsB,cAACrN,EAAA,EAAD,CAAKM,UAAU,SAASqB,GAAI,EAAG1F,MAAM,MAArC,SAA6CiO,IAE5F,cAAClK,EAAA,EAAD,CAAKM,UAAU,SAASqB,GAAI,EAA5B,SAEI4L,GAAYF,GACT,4DACqB,cAACjN,EAAA,EAAD,CAAYF,GAAI,CAAE+N,OAAQ,UAAW/I,QAAS,SAAUjJ,MAAO,QAAUiS,UAAU,OAAOpJ,QAAUgJ,EAApG,sBAErB,+DACwB,cAAC1N,EAAA,EAAD,CAAYF,GAAI,CAAE+N,OAAQ,UAAW/I,QAAS,SAAUjJ,MAAO,QAAUiS,UAAU,OAAOpJ,QAAUgJ,EAApG,+BCvF5BK,GA9BI,WACjB,IAAM5K,EAAOU,aAAY,SAAAP,GAAK,OAAIA,EAAMQ,KAAKX,QACvCY,EAAWC,cAEjB,GAAIE,eAAekG,WAAajH,EAC9B,IACE,IAAI+G,EAAUC,YAAWjG,eAAekG,UACxCrG,EAASV,GAAe,CAAEF,KAAM+G,EAAShI,MAAOgC,eAAekG,YAC/D,MAAOtH,IAKX,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkL,KAAK,QAAQC,OAAK,EAACC,QAAS,cAAC,GAAD,MACnC,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOA,KAAK,SAASC,OAAK,EAACC,QAAU,cAAC,IAAD,CAAUpN,GAAG,kBAClD,cAAC,IAAD,CAAOkN,KAAK,cAAcE,QAAU,cAAC,GAAD,MACpC,cAAC,IAAD,CAAOF,KAAK,eAAeE,QAAU,cAAC,GAAD,UAAa,cAAC,GAAD,QAClD,cAAC,IAAD,CAAOF,KAAK,eAAeE,QAAU,cAAC,GAAD,UAAa,cAAC,GAAD,QAClD,cAAC,IAAD,CAAOF,KAAK,qBAAqBE,QAAU,cAAC,GAAD,UAAa,cAAC,GAAD,WAE1D,cAAC,IAAD,CAAOF,KAAK,IAAIE,QAAS,cAAC,GAAD,YClClBC,GANDC,aAAe,CACzBC,QAAS,CACLvK,KAAMwK,MCMRC,GAAU,CACdC,8BAqBaC,GAlBH,WACK1C,sBACf,OACE,cAAC,qBAAD,CAAoB2C,SAAS,wBAA7B,SACE,cAAC,iBAAD,CAAgBH,QAASA,GAASI,aAAW,EAA7C,SACE,cAAC,sBAAD,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,eAACS,EAAA,EAAD,CAAe5R,MAAQA,EAAvB,UACE,cAAC6R,EAAA,EAAD,IACA,cAAC,GAAD,gBCbCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrM,MAAK,YAAkD,IAA/CsM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.77862b24.chunk.js","sourcesContent":["const themeTypography = () => {\r\n  return {\r\n    h1: {\r\n      color: '#fff', \r\n      fontWeight: 'bold'\r\n    },\r\n    h2: {\r\n      color: '#fff', \r\n      fontWeight: 'bold'\r\n    },\r\n    h3: {\r\n      color: '#fff', \r\n      fontWeight: 'bold'\r\n    },\r\n    h4: {\r\n      color: '#fff', \r\n      fontWeight: 'bold'\r\n    },\r\n    h5: {\r\n      color: '#fff', \r\n      fontWeight: 'bold'\r\n    },\r\n    h6: {\r\n      color: '#fff', \r\n      fontWeight: 'bold'\r\n    },\r\n    body1: {\r\n      color: '#fff'\r\n    },\r\n    body2: {\r\n      color: ''\r\n    },\r\n    button: {\r\n      textTransform: 'none',\r\n      fontWeight: 'bold'\r\n    },\r\n    subtitle1: {\r\n      fontSize: '0.8rem',\r\n      color: '#ffffffaa'\r\n    }\r\n  };\r\n};\r\n\r\nexport default themeTypography;","const themePalette = () => {\r\n  return {\r\n    background: {\r\n      default: '#000'\r\n    },\r\n  };\r\n};\r\n\r\nexport default themePalette;","import { Switch } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst componentStyleOveride = () => {\r\n  return {\r\n    MuiPaper: {\r\n      defaultProps: {\r\n        elevation: 0\r\n      },\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#111111',\r\n          borderRadius: '10px',\r\n          border: 'none',\r\n          color: '#fff',\r\n          padding: '20px'\r\n        }\r\n      }\r\n    },\r\n\r\n    // Button Style Overide\r\n    MuiButtonBase: {\r\n      styleOverrides: {\r\n        root: {\r\n          '&:hover': {\r\n            backgroundColor: '#222 !important'\r\n          }\r\n        }\r\n      }\r\n    },\r\n  MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#fff',\r\n          '&.Mui-disabled': {\r\n            color: '#ffffff44',\r\n            borderColor: '#ffffff44'\r\n          },\r\n          '&.MuiButton-text:hover': {\r\n            backgroundColor: '#111'\r\n          }\r\n        },\r\n        outlined: {\r\n          borderColor: '#fff',\r\n          '&:hover': {\r\n            borderColor: '#ffffffaa'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#fff',\r\n          '&.Mui-disabled': {\r\n            color: '#ffffff44',\r\n            borderColor: '#ffffff44'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#000',\r\n          color: '#fff',\r\n          borderBottom: '1px solid #ffffff33',\r\n          borderRadius: '0px',\r\n        }\r\n      }\r\n    },\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#fff',\r\n          borderWidth: '1px',\r\n          borderColor: '#fff'\r\n        }\r\n      }\r\n    },\r\n    MuiListItemButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#ffffff11',\r\n          borderLeft: '5px solid #ffffff11',\r\n          minWidth: '80px',\r\n          '&:hover': {\r\n            borderLeft: '5px solid #0d6efd'\r\n          },\r\n          '&.Mui-selected': {\r\n            borderLeft: '5px solid #0d6efd'\r\n          }\r\n        },\r\n      }\r\n    },\r\n\r\n    MuiMenu: {\r\n      styleOverrides: {\r\n        root: {\r\n          '& .MuiPaper-root': {\r\n            padding: '0px !important',\r\n            backgroundColor: '#222'\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    // Input Style Overide\r\n    MuiOutlinedInput: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#fff',\r\n          borderColor: '#fff',\r\n          '& svg': {\r\n            color: '#fff'\r\n          },\r\n          '& fieldset': {            // - The <fieldset> inside the Input-root\r\n            borderColor: '#aaa',   // - Set the Input border\r\n          },\r\n          '&:hover fieldset': {            // - The <fieldset> inside the Input-root\r\n            borderColor: '#aaa !important',   // - Set the Input border\r\n          },\r\n        }\r\n      }\r\n    },\r\n\r\n    // Navbar Style Overide\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#000',\r\n          color: '#fff',\r\n          borderBottom: '1px solid #ffffff33',\r\n          borderRadius: '0px',\r\n        }\r\n      }\r\n    },\r\n    MuiSvgIcon: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#fff'\r\n        }\r\n      }\r\n    },\r\n\r\n    // Table Style Overide\r\n    MuiTable: {\r\n      styleOverrides: {\r\n        root: {\r\n\r\n        }\r\n      }\r\n    },\r\n    MuiTableHead: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#ffffff22',\r\n          '& .MuiTableCell-root': {\r\n            color: '#ffffff99',\r\n            textTransform: 'capitalize'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#fff', \r\n          borderColor: '#ffffff22'\r\n        }\r\n      }\r\n    },\r\n    MuiTextField: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#fff'\r\n        }\r\n      }\r\n    },\r\n    MuiInput: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#fff'\r\n        }\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport const Android12Switch = styled(Switch)(({ theme }) => ({\r\n  padding: 8,\r\n  '& .MuiSwitch-track': {\r\n    borderRadius: 22 / 2,\r\n    '&:before, &:after': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      width: 16,\r\n      height: 16,\r\n    },\r\n    '&:before': {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main),\r\n      )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n      left: 12,\r\n    },\r\n    '&:after': {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main),\r\n      )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n      right: 12,\r\n    },\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    boxShadow: 'none',\r\n    width: 16,\r\n    height: 16,\r\n    margin: 2,\r\n  },\r\n}));\r\n\r\nexport default componentStyleOveride;","import { createTheme } from '@mui/material/styles';\r\n\r\nimport themeTypography from './typography';\r\nimport themePalette from './palette';\r\nimport componentStyleOveride from './componentStyleOveride';\r\n\r\nconst theme = createTheme({\r\n  palette: themePalette(),\r\n  typography: themeTypography(),\r\n  components: componentStyleOveride()\r\n});\r\n\r\nexport default theme;","import React, { useEffect, useState } from 'react';\r\nimport Unity, { UnityContent } from 'react-unity-webgl';\r\n\r\n//import useMetaMask from \"@hooks/metamask\";\r\nimport { pubKeyShortAddress } from \"@utils/transformers\";\r\n\r\nconst unityContent = new UnityContent('WebGL/Build/WebGL.json', 'WebGL/Build/UnityLoader.js');\r\n\r\nfunction WebGL() {\r\n  //const { connectMetaMask } = useMetaMask();\r\n\r\n  useEffect(() => {\r\n    unityContent.on('onConnectWallet', async () => {\r\n      /*connectMetaMask()\r\n        .then(({account}) => {\r\n          unityContent.send(\"Main Menu\", \"OnConnectedWallet\", pubKeyShortAddress(account, 6));\r\n        })\r\n        .catch(err => {\r\n          alert(err.message);\r\n        })*/\r\n    });\r\n\r\n    unityContent.on('NFTImage', () => {\r\n      // return NFT Image url from IPFS\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Unity unityContent={ unityContent } />\r\n  );\r\n}\r\n\r\nexport default WebGL;\r\n","import { Link } from 'react-router-dom';\r\nimport { Box, Link as MuiLink, Typography } from '@mui/material';\r\nimport { List, ListItem, ListItemButton, ListItemIcon, ListItemText } from '@mui/material'\r\n\r\nconst Sider = (props) => {\r\n  return (\r\n    <Box\r\n      width={props.collapsed? '80px' : '250px'} height='100%'\r\n      sx={{ position: 'fixed', zIndex: '1000000', top: 0, left: 0, backgroundColor: '#000' }}\r\n    >\r\n      <Typography variant='h3' textAlign='center' my={3}>Tecnopac</Typography>\r\n      <List>\r\n        { props.collapsed ? \r\n          props.menuItems.map((menuItem, index) => {\r\n            return (\r\n              <ListItem sx={{ px: 0 }} alignItems='center' key={ index } component={ Link } to={ menuItem.url }>\r\n                <ListItemButton selected={ window.location.href.includes(menuItem.url) } sx={{pl: '25px', py: '12px'}}>\r\n                  <ListItemIcon>\r\n                    { menuItem.icon }\r\n                  </ListItemIcon>\r\n                </ListItemButton>\r\n              </ListItem>\r\n            );\r\n          }) : \r\n          props.menuItems.map((menuItem, index) => {\r\n            return (\r\n              <ListItem sx={{ px: 0 }} key={ index } component={ Link } to={ menuItem.url }>\r\n                <ListItemButton selected={ window.location.href.includes(menuItem.url) }>\r\n                  <ListItemIcon>\r\n                    { menuItem.icon }\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={ menuItem.text } />\r\n                </ListItemButton>\r\n              </ListItem>\r\n            );\r\n          })\r\n        }\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sider;","import axios from 'axios';\r\n\r\nlet axiosInstance = axios.create({\r\n    baseURL: 'https://konceptual.heroku.app/api',\r\n    headers: {\r\n        'Access-Control-Allow-Origin': '*'\r\n    }\r\n});\r\n\r\nexport const setAuthToken = token => {\r\n    axiosInstance.defaults.headers.common['Authorization'] = token;\r\n};\r\n\r\nexport const sendRequest = ({ url, method, data }) => {\r\n    return new Promise((resolve, reject) => {\r\n        axiosInstance({\r\n            method,\r\n            url,\r\n            data: data || {}\r\n        })\r\n        .then(response => {\r\n            resolve(response.data)\r\n        })\r\n        .catch(err => {\r\n            reject(err.response)\r\n        });\r\n    });\r\n}\r\n\r\nexport default axiosInstance;","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nimport { setAuthToken } from \"@services/api\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n    token: null\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setCredentials: (state, { payload: { user, token } }) => {\r\n            setAuthToken(token);\r\n            state.user = user;\r\n            state.token = token;\r\n        },\r\n        destoryCredentials: (state) => {\r\n            setAuthToken('');\r\n            state.user = null;\r\n            state.token = null;\r\n        }\r\n    },\r\n});\r\n\r\nexport const { setCredentials, destoryCredentials } = authSlice.actions;\r\nexport default authSlice.reducer;\r\nexport const selectCurrentUser = state => state.auth.user","import { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { AppBar, Box, Toolbar, IconButton, Typography, Avatar, Button, Menu, MenuItem } from '@mui/material';\r\nimport LogoutSharpIcon from '@mui/icons-material/LogoutSharp';\r\nimport NotificationsOutlinedIcon from '@mui/icons-material/NotificationsOutlined';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { ArrowLeft, ArrowRight } from '@mui/icons-material';\r\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\r\n\r\nimport { destoryCredentials } from \"@store/slices/auth.slice\";\r\n\r\nconst Navbar = (props) => {\r\n  const navigate = useNavigate();\r\n  const user = useSelector(state => state.auth.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleToggleSider = () => {\r\n    props.toggleSider(!props.collapsed);\r\n  }\r\n\r\n  const signOut = () => {\r\n    sessionStorage.clear();\r\n    dispatch(destoryCredentials());\r\n    navigate('/admin/auth');\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, ml: props.collapsed ? '200px' : '250px' }}>\r\n      <AppBar position=\"static\" sx={{ pl:0 }}>\r\n        <Toolbar>\r\n          <IconButton size='large' onClick={handleToggleSider}>\r\n            {props.collapsed ? <ArrowRight /> : <ArrowLeft /> }\r\n          </IconButton>\r\n          <Typography \r\n            variant=\"h5\"\r\n            component=\"div\"\r\n          >\r\n            Dashboard\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: 'flex' }}>\r\n            <IconButton size='large'>\r\n              <NotificationsOutlinedIcon />\r\n            </IconButton>\r\n            <IconButton size='large'>\r\n              <SettingsOutlinedIcon />\r\n            </IconButton>\r\n            <IconButton size='large'>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            {\r\n              user && user.username\r\n                ?\r\n                  <>\r\n                    <PopupState variant='popover' popupId='demo-popup-menu'>\r\n                      {(popupState) => (\r\n                        <>\r\n                          <Button variant='outlined' {...bindTrigger(popupState)}>\r\n                            { user.username }\r\n                          </Button>\r\n                          <Menu {...bindMenu(popupState)} anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}>\r\n                            <MenuItem onClick={signOut}><LogoutSharpIcon />Sign Out</MenuItem>\r\n                          </Menu>\r\n                        </>\r\n                      )}\r\n                    </PopupState>\r\n                  </>\r\n                :\r\n                  <Button variant='text'\r\n                    sx={{ ml: 2, width: '100%', }}\r\n                    color='primary'\r\n                    component={NavLink} \r\n                    to=\"/admin/auth\"\r\n                    size='large'\r\n                  >Sign In</Button>    \r\n            } \r\n            {/*\r\n            <Avatar\r\n              sx={{ bgcolor: '#adadec' }}\r\n              alt=\"Remy Sharp\"\r\n              src=\"/broken-image.jpg\"\r\n            >\r\n              \r\n            </Avatar>\r\n            */\r\n            }\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import { useState } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\n\r\nimport Sider from \"./Sider\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst sider = [\r\n  { text: 'User Manage', url: '/admin/users', icon: <SupervisorAccountIcon /> },\r\n  { text: 'Room Manage', url: '/admin/rooms', icon: <ForumIcon /> },\r\n  { text: 'NFTs Manage', url: '/admin/collections', icon: <ImageIcon /> }\r\n];\r\nconst MainLayout = (props) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  return (\r\n    <Box>\r\n      <Sider menuItems={sider} collapsed={collapsed} />\r\n      <Navbar title={props.title} toggleSider={setCollapsed} collapsed={collapsed}/>\r\n      <Box ml={ collapsed ? '80px' : '250px'} p={4}>\r\n        { props.children }  \r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default MainLayout;","import { useState, useEffect } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Stack, Typography, Select, MenuItem, FormControl } from '@mui/material';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport { Android12Switch } from \"@themes/componentStyleOveride\";\r\n\r\nfunction createData(username, email, wallet_address, status) {\r\n  return { username, email, wallet_address, status };\r\n}\r\n\r\nconst rows = [\r\n    createData('Mike George', 'mike.george@gmail.com', '0xda9dfa130df4de4673b89022ee50ff26f6ea73cf', 'pending'),\r\n    createData('Alexei Eugene', 'alexei.eugene@gmail.com', '0xbe0eb53f46cd790cd13851d5eff43d12404d33e8', 'pending'),\r\n    createData('Louise Colin', 'louise.colin@gmail.com', '0x73bceb1cd57c711feac4224d062b0f6ff338501e', 'pending'),\r\n    createData('Smith Stewart', 'smith.stewart@gmail.com', '0x9bf4001d307dfd62b26a2f1307ee0c0307632d59', 'pending'),\r\n    createData('Shane Aloyd', 'shane.aloyd@gmail.com', '0x1b3cb81e51011b549d78bf720b0d924ac763a7c2', 'pending'),\r\n];\r\n\r\nexport default function BasicTable() {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        /*getUsersList()\r\n            .then((data) => {\r\n                setUsers(data.users.filter(user => user.role.name != 'superadmin'));\r\n            });*/\r\n    }, []);\r\n\r\n    const userStatus = status => {\r\n        return status == \"pending\" ? false : true;\r\n    }\r\n\r\n    const toggleUserStatus = index => () => {\r\n        let newUsers = [...users];\r\n        let newStatus = (users[index].status == 'pending' ? 'active' : 'pending');\r\n        newUsers[index].status = newStatus;\r\n\r\n        /*setUserStatus(newUsers[index].uuid, newStatus)\r\n            .then(({ success }) => {\r\n                success && setUsers(newUsers);\r\n            });*/\r\n    }\r\n\r\n    const capitalizeFirstLetter = string => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper} sx={{p:0}}>\r\n            <Stack justifyContent='space-between' flexDirection='row' >\r\n                <Typography variant='h6' p={3}>Users</Typography>\r\n                <FormControl variant='standard'>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        sx={{ width: '100px' }}\r\n                        // value={age}\r\n                        // label=\"Age\"\r\n                        // onChange={handleChange}\r\n                    >\r\n                        <MenuItem value={10}>Ten</MenuItem>\r\n                        <MenuItem value={20}>Twenty</MenuItem>\r\n                        <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Stack>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell align=\"center\">Username</TableCell>\r\n                        <TableCell align=\"center\">Email</TableCell>\r\n                        <TableCell align=\"center\">Wallet Address</TableCell>\r\n                        <TableCell align=\"center\">Status</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((user, index) => (\r\n                        <TableRow\r\n                            key={index}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {index + 1}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">{user.username}</TableCell>\r\n                            <TableCell align=\"center\">{user.email}</TableCell>\r\n                            <TableCell align=\"center\">{user.wallet_address}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <FormControlLabel\r\n                                    control={<Android12Switch />}\r\n                                    label={ capitalizeFirstLetter(user.status) }\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\n","import { Grid } from '@mui/material';\r\n\r\nimport UsersTable from \"@components/admin/UsersTable\";\r\n\r\nconst MainPage = (props) => {\r\n  return (\r\n    <>\r\n        <Grid container>\r\n            <Grid item xs={12} mt={3}>\r\n                <UsersTable />\r\n            </Grid>\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport { Stack, Typography, Button } from '@mui/material';\r\n\r\nfunction createData(name, owner, nft_count) {\r\n  return { name, owner, nft_count };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', '0xda9dfa130df4de4673b89022ee50ff26f6ea73cf', 24),\r\n  createData('Ice cream sandwich', '0xbe0eb53f46cd790cd13851d5eff43d12404d33e8', 17),\r\n  createData('Eclair', '0x73bceb1cd57c711feac4224d062b0f6ff338501e', 35),\r\n  createData('Cupcake', '0x9bf4001d307dfd62b26a2f1307ee0c0307632d59', 15),\r\n  createData('Gingerbread', '0x1b3cb81e51011b549d78bf720b0d924ac763a7c2', 21),\r\n];\r\n\r\nexport default function ManageRooms() {\r\n  return (\r\n    <TableContainer component={Paper} sx={{p:0}}>\r\n      <Stack justifyContent='space-between' alignItems='center' flexDirection='row' >\r\n        <Typography variant='h6' p={3}>Rooms</Typography>\r\n        <Button variant='outlined'\r\n          sx={{ mr: 3, height: 50 }}\r\n          color='primary'\r\n          size='large'\r\n        ><AddIcon /> Add Room</Button>\r\n      </Stack>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            <TableCell align=\"center\">Room Name</TableCell>\r\n            <TableCell align=\"center\">Room Owner</TableCell>\r\n            <TableCell align=\"center\">NFTs count</TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow\r\n              key={index}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {index + 1}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.name}</TableCell>\r\n              <TableCell align=\"center\">{row.owner}</TableCell>\r\n              <TableCell align=\"center\">{row.nft_count}</TableCell>\r\n              <TableCell align=\"center\">\r\n                <Button size='medium'><EditIcon /></Button>\r\n                <Button size='medium'><DeleteOutlineIcon /></Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\n","import * as React from 'react';\r\nimport { Container, Card, CardActions, CardContent, CardMedia, Grid, Stack, Typography, Button } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nfunction createData(image, name, amount) {\r\n  return { image, name, amount };\r\n}\r\n\r\nconst rows = [\r\n  createData('/assets/images/nft_collections/degenape.webp', 'Degenerate Ape Academy', '1.11m'),\r\n  createData('/assets/images/nft_collections/degeneratetrashpandas.webp', 'Degenerate Trash Pandas', '33.55k'),\r\n  createData('/assets/images/nft_collections/nyanheroes.webp', 'Nyah Heroes', '43.48k')\r\n];\r\n\r\nexport default function ManageRooms() {\r\n  return (\r\n    <Container maxWidth={ false }>\r\n      <Stack justifyContent='space-between' alignItems='center' flexDirection='row' >\r\n        <Typography variant='h6' p={3}>Collections</Typography>\r\n        <Button variant='outlined'\r\n          sx={{ mr: 3, height: 50 }}\r\n          color='primary'\r\n          size='large'\r\n        ><AddIcon /> Add Collection</Button>\r\n      </Stack>\r\n      <Grid container spacing={2}>\r\n        {\r\n          rows.map((nft, index) =>\r\n            <Grid item xs={4} key={ index }>\r\n              <Card sx={{ maxWidth: '100%', height: '100%' }}>\r\n                <CardMedia component='img' image={ nft.image } height=\"200\" />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"div\" align=\"center\">{ nft.name }</Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Grid container direction='row' justifyContent='center' alignItems='bottom'>\r\n                    <Button variant=\"outlined\" color=\"success\">\r\n                      <img src='/assets/images/sol-logo.png' width=\"16\" height=\"16\" />&nbsp;Volume&ensp;{ nft.amount }\r\n                    </Button>\r\n                  </Grid>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          )\r\n        }\r\n        {\r\n          rows.map((nft, index) =>\r\n            <Grid item xs={4} key={ 2 * (index + 1) }>\r\n              <Card sx={{ maxWidth: '100%', height: '100%' }}>\r\n                <CardMedia component='img' image={ nft.image } height=\"200\" />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"div\" align=\"center\">{ nft.name }</Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Grid container direction='row' justifyContent='center' alignItems='bottom'>\r\n                    <Button variant=\"outlined\" color=\"success\">\r\n                      <img src='/assets/images/sol-logo.png' width=\"16\" height=\"16\" />&nbsp;Volume&ensp;{ nft.amount }\r\n                    </Button>\r\n                  </Grid>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          )\r\n        }\r\n        {\r\n          rows.map((nft, index) =>\r\n            <Grid item xs={4} key={ 3 * (index + 1) }>\r\n              <Card sx={{ maxWidth: '100%', height: '100%' }}>\r\n                <CardMedia component='img' image={ nft.image } height=\"200\" />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"div\" align=\"center\">{ nft.name }</Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Grid container direction='row' justifyContent='center' alignItems='bottom'>\r\n                    <Button variant=\"outlined\" color=\"success\">\r\n                      <img src='/assets/images/sol-logo.png' width=\"16\" height=\"16\" />&nbsp;Volume&ensp;{ nft.amount }\r\n                    </Button>\r\n                  </Grid>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          )\r\n        }\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\n","import { sendRequest } from \"@services/api\";\r\n\r\nexport const loginAdmin = ({ username, password }) => {\r\n    return sendRequest({\r\n        url: '/admin/auth/login',\r\n        method: 'POST',\r\n        data: {\r\n            username, password\r\n        }\r\n    });\r\n}","import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport jwt_decode from 'jwt-decode';\r\n// UI Components\r\nimport { TextField, Button, Typography, Box, InputAdornment, Container } from '@mui/material';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faCircleUser, faLock } from '@fortawesome/free-solid-svg-icons';\r\nimport { faWallet } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { loginAdmin } from \"@services/admin/auth.service\";\r\nimport { setCredentials } from \"@store/slices/auth.slice\";\r\n\r\nconst Auth = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [alert, setAlert] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      let response = await loginAdmin({\r\n        username, password\r\n      });\r\n\r\n      let decoded = jwt_decode(response.token);\r\n      sessionStorage.jwtToken = response.token;\r\n      dispatch(setCredentials({ user: decoded, token: response.token }));\r\n      navigate('/admin/users');\r\n    } catch (err) {\r\n      if (err.status == 422)\r\n        setAlert(\"You have no admin permisson!\");\r\n      else if (err.status == 500)\r\n        setAlert(\"Server Error!\");\r\n      else if (err.status == 400)\r\n        setAlert(\"Incorrect Password!\");\r\n      else if (err.status == 404)\r\n        setAlert(\"Not Registered!\");\r\n      else setAlert(\"Operation failed!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='xs' sx={{m: 'auto', height: 'calc(100vh)'}}>\r\n      <Typography variant='h1' fontWeight='bold' sx={{ py: '30px' }}>Konceptual</Typography>\r\n      <Typography variant='h4' fontWeight='bold'>Login for Administrator</Typography>\r\n      <Typography sx={{ mt: 2, mb: 5 }}>Earth's most results-oriented business hub.</Typography>\r\n        <>\r\n            <TextField\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"Username or Email\"\r\n                sx={{my:2, width: '100%'}}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <FontAwesomeIcon icon={faCircleUser} color='white'/>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                required\r\n            />\r\n            <TextField\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"Password\"\r\n                sx={{my:2, width: '100%'}}\r\n                type=\"password\"\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <FontAwesomeIcon icon={ faLock } color='white' />\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                required\r\n            />\r\n        </>\r\n      {\r\n        alert && <Box textAlign='center' py={2} color='red'>{ alert }</Box>\r\n      }\r\n      <Button variant='outlined'\r\n        sx={{ my: 2, width: '100%', p: 2 }}\r\n        color='primary'\r\n        startIcon={ <FontAwesomeIcon icon={faWallet} /> }\r\n        onClick={ handleLogin }\r\n      >Sign In</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Auth;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\nimport { Box, Container, Button, Menu, MenuItem } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\n\r\nimport { pubKeyShortAddress } from \"@utils/transformers\";\r\nimport { destoryCredentials } from \"@store/slices/auth.slice\";\r\n\r\nconst BackgroundImage = styled(Box)({\r\n  position: 'absolute',\r\n  left: 0,\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  background: 'url(assets/images/home/background.jfif) no-repeat center fixed',\r\n  backgroundSize: 'cover',\r\n});\r\n\r\nconst DarkBackground = styled(Box)({\r\n  position: 'absolute',\r\n  left: 0,\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.65)'\r\n});\r\n\r\nconst WebLayout = (props) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const user = useSelector(state => state.auth.user);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const wallet = useWallet();\r\n  \r\n  const handleClick = (event) => {\r\n    if (user)\r\n      setAnchorEl(event.currentTarget);\r\n    else navigate('/auth');\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem('jwtToken');\r\n    wallet.disconnect();\r\n    dispatch(destoryCredentials());\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  if (user && (user.role != \"USER\" || !user.wallet_address))\r\n    handleLogout();\r\n\r\n  return (\r\n    <>\r\n      <BrowserView>\r\n        <BackgroundImage />\r\n        <DarkBackground />\r\n        <Container maxWidth={ false } sx={{ position: 'relative', py: 5 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleClick}>{ user ? pubKeyShortAddress(user.wallet_address, 4) : \"Sign Up\" }</Button>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              MenuListProps={{\r\n                'aria-labelledby': 'basic-button',\r\n              }}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n            >\r\n              <MenuItem onClick={handleLogout}>Log Out</MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        </Container>\r\n      </BrowserView>\r\n      <MobileView>\r\n        <Box>\r\n          <Box p={4}>\r\n            { props.children }  \r\n          </Box>\r\n        </Box>\r\n\r\n      </MobileView>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WebLayout;","export function pubKeyShortAddress(pubkey, padCnt) {\r\n    return pubkey.slice(0, padCnt + (pubkey.startsWith('0x') ? 2 : 0)) + '.'.repeat(3) + pubkey.slice(-padCnt);\r\n}","export const isValidEmail = email => {\r\n    return String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            );\r\n}\r\n\r\nexport const isAuthLogined = () => {\r\n    \r\n}","import { sendRequest } from \"./api\";\r\n\r\nexport const loginUser = ({ wallet_address }) => {\r\n    return sendRequest({\r\n        url: '/auth/login',\r\n        method: 'POST',\r\n        data: {\r\n            wallet_address\r\n        }\r\n    });\r\n}\r\n\r\nexport const registerUser = ({ username, email, wallet_address }) => {\r\n    return sendRequest({\r\n        url: '/auth/register',\r\n        method: 'POST',\r\n        data: {\r\n            username, email, wallet_address\r\n        }\r\n    });\r\n}","import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport Web3 from 'web3';\r\nimport jwt_decode from 'jwt-decode';\r\n// UI Components\r\nimport { TextField, Button, Typography, Box, InputAdornment, Container } from '@mui/material';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faCircleUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { faWallet } from '@fortawesome/free-solid-svg-icons';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\n\r\nimport SolanaWallets from \"@hooks/wallet\";\r\nimport { isValidEmail } from \"@utils\";\r\nimport { registerUser, loginUser } from \"@services/auth.service\";\r\nimport { setCredentials } from \"@store/slices/auth.slice\";\r\n\r\n\r\nconst authModes = {\r\n    login: 'AUTH_LOGIN_MODE',\r\n    register: 'AUTH_REGISTER_MODE'\r\n};\r\n\r\nconst Auth = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [alert, setAlert] = useState('');\r\n    const [authMode, setAuthMode] = useState(authModes['register']);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const wallet = useWallet();\r\n    \r\n    useEffect(() => {\r\n        if (wallet.connected)\r\n            wallet.disconnect();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                if (wallet.connected) {  // Connected Wallet\r\n                    let response, wallet_address = wallet.publicKey.toString();\r\n                    if (authMode == authModes['login']) {\r\n                        response = await loginUser({ wallet_address });\r\n                    } else if (authMode == authModes['register']) {\r\n                        response = await registerUser({\r\n                            username, email, wallet_address\r\n                        });\r\n                    }\r\n\r\n                    let decoded = jwt_decode(response.token);\r\n                    sessionStorage.jwtToken = response.token;\r\n                    dispatch(setCredentials({ user: decoded, token: response.token }));\r\n                    navigate('/');\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n                if (err.status == 409)\r\n                    setAlert(\"Already registered!\");\r\n                else if (err.status == 400)\r\n                    setAlert(\"Not Activated yet!\");\r\n                else if (err.status == 404)\r\n                    setAlert(\"Non Registered User!\");\r\n                else if (err.status == 500)\r\n                    setAlert(\"Server Error!\");\r\n                else setAlert(\"Operation failed!\");\r\n            }\r\n        })();\r\n    }, [wallet.connected]);\r\n\r\n    const toggleMode = () => {\r\n        if (authMode == authModes['login'])\r\n            setAuthMode(authModes['register']);\r\n        else setAuthMode(authModes['login']);\r\n\r\n        wallet.disconnect();\r\n        setAlert('');\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='xs' sx={{m: 'auto', height: 'calc(100vh)'}}>\r\n            <Typography variant='h1' fontWeight='bold' sx={{ py: '50px' }}>Konceptual</Typography>\r\n            <Typography variant='h4' fontWeight='bold'>{ authMode == authModes.login ? 'Login' : 'Register' } for Access</Typography>\r\n            <Typography sx={{ mt: 2, mb: 5 }}>Earth's most results-oriented business hub.</Typography>\r\n            {\r\n                authMode == authModes.register &&\r\n                    <>\r\n                    <TextField\r\n                        id=\"input-with-icon-textfield\"\r\n                        label=\"Username\"\r\n                        sx={{my:2, width: '100%'}}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                            <FontAwesomeIcon icon={faCircleUser} color='white'/>\r\n                            </InputAdornment>\r\n                        ),\r\n                        }}\r\n                        value={username}\r\n                        onChange={e => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        id=\"input-with-icon-textfield\"\r\n                        label=\"Email\"\r\n                        sx={{my:2, width: '100%'}}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                            <FontAwesomeIcon icon={ faEnvelope } color='white' />\r\n                            </InputAdornment>\r\n                        ),\r\n                        }}\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                    </>\r\n            }\r\n            {\r\n                alert && authMode == authModes['register'] && <Box textAlign='center' py={2} color='red'>{ alert }</Box>\r\n            }\r\n            <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <WalletMultiButton startIcon={ <FontAwesomeIcon icon={faWallet} /> }\r\n                    disabled={!(username && isValidEmail(email)) && authMode == authModes['register']} />\r\n            </Box>\r\n            {\r\n                alert && authMode == authModes['login'] && <Box textAlign='center' py={2} color='red'>{ alert }</Box>\r\n            }\r\n            <Box textAlign='center' py={2}>\r\n            {\r\n                authMode == authModes['register']\r\n                ? (<>\r\n                    Already registered? <Typography sx={{ cursor: 'pointer', display: 'inline', color: '#07f' }} underline='none' onClick={ toggleMode }>Login</Typography>\r\n                    </>)\r\n                : (<>\r\n                    Don't have an account? <Typography sx={{ cursor: 'pointer', display: 'inline', color: '#07f' }} underline='none' onClick={ toggleMode }>Register</Typography>\r\n                    </>)\r\n            }\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Auth;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { \r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate\r\n} from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport Index from \"@pages/WebGL\";\r\nimport AdminLayout from \"@layouts/admin\";\r\nimport AdminUsersManage from \"@pages/admin/ManageUsers\";\r\nimport AdminRoomsManage from \"@pages/admin/ManageRooms\";\r\nimport AdminNFTsManage from \"@pages/admin/ManageNFTs\";\r\nimport AdminAuth from \"@pages/admin/auth\";\r\n\r\nimport WebLayout from \"@layouts/web\";\r\nimport WebAuth from \"@pages/web/auth\";\r\nimport { setCredentials } from \"@store/slices/auth.slice\";\r\n\r\nconst MainRoutes = () => {\r\n  const user = useSelector(state => state.auth.user);\r\n  const dispatch = useDispatch();\r\n  \r\n  if (sessionStorage.jwtToken && !user) {\r\n    try {\r\n      let decoded = jwt_decode(sessionStorage.jwtToken);\r\n      dispatch(setCredentials({ user: decoded, token: sessionStorage.jwtToken }));\r\n    } catch (err) {\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path='/auth' exact element={<WebAuth />} />\r\n        <Route path='/admin'>\r\n          <Route path='/admin' exact element={ <Navigate to='/admin/auth' /> } />\r\n          <Route path='/admin/auth' element={ <AdminAuth /> } />\r\n          <Route path='/admin/users' element={ <AdminLayout><AdminUsersManage /></AdminLayout> } />\r\n          <Route path='/admin/rooms' element={ <AdminLayout><AdminRoomsManage /></AdminLayout> } />\r\n          <Route path='/admin/collections' element={ <AdminLayout><AdminNFTsManage /></AdminLayout> } />\r\n        </Route>\r\n        <Route path='/' element={<WebLayout />} />\r\n      </Routes>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default MainRoutes;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authReducer from \"@store/slices/auth.slice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: authReducer\r\n    }\r\n});\r\n\r\nexport default store;","import { Provider } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\n\nimport { getPhantomWallet } from '@solana/wallet-adapter-wallets';\nimport { useWallet, WalletProvider, ConnectionProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\n\nimport theme from \"@themes\";\nimport Routes from '@routes/index.js';\nimport store from \"@store\";\n\nconst wallets = [\n  getPhantomWallet()\n];\n\nconst App = () => {\n  const wallet = useWallet();\n  return (\n    <ConnectionProvider endpoint=\"http://127.0.0.1:8899\">\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletModalProvider>\n          <Provider store={store}>\n            <ThemeProvider theme={ theme }>\n              <CssBaseline />\n              <Routes />\n            </ThemeProvider>\n          </Provider>\n        </WalletModalProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}